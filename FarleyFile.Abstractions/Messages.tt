<#@ template language="C#" #>
<#@ assembly name="$(SolutionDir)\Library\Lokad.CodeDsl.dll" #>
using System;
using System.Runtime.Serialization;
using System.Collections.Generic;

// this is a DSL to define code contract classes without writing them
// Good for starting a project quickly
// pressing Ctrl+S updates CS version immediately
<# var dsl = @"
using ? = ICommand;
using ! = IEvent;


let noteId = Guid NoteId; 
let storyId = Guid StoryId;
let taskId = Guid TaskId;
let date = DateTime Date;

PerspectiveCreated! (storyId)

// generic story
StartSimpleStory? (string name)
SimpleStoryStarted! (storyId, string name)


AddNote? (string title, string text, storyId)
NoteAdded! (noteId, string title, string text)
NoteAssignedToStory!  (noteId, storyId, string title, string text)
NoteRemovedFromStory! (noteId, storyId)

EditNote? (noteId, string text, string oldText)
NoteEdited! (noteId, string newText, string oldText, ICollection<Guid> storyIds)
NoteRemoved! (noteId)

MergeNotes? (noteId, Guid secondary)


AddTask? (string text, storyId)
TaskAdded! (taskId, string text)
TaskAssignedToStory! (taskId, storyId, string text, bool completed)
TaskRemovedFromStory! (taskId, storyId)

AddToStory? (Guid itemId, storyId)
RemoveFromStory? (Guid itemId, storyId)


// helpers
AddTaskToStory? (taskId, storyId)


CompleteTask? (taskId)
TaskCompleted! (taskId, ICollection<Guid> storyIds)









";   
var generator = new Lokad.CodeDsl.TemplatedGenerator()
{
    Namespace = "FarleyFile",
    ClassNameTemplate = @"
[DataContract] public sealed class {0}",
    MemberTemplate = "[DataMember(Order = {0})] public {1} {2} {{ get; internal set; }}",
    PrivateCtorTemplate = @"
internal {0} () {{}}"
}; #>
<#= Lokad.CodeDsl.GeneratorUtil.Build(dsl, generator) #>